from rsf.proj import *

__author__ = "Geofisicando"
__version__ = "1.0.0"
__site__ = "www.geofisicando.com"

Help('''
 Denoising Flow
 ==============

 Author: %s
 Version: %s
 Site: %s
 ''' % (__author__,__version__,__site__))

Help('''
1 - Create velocity model and dataset
''')

Flow('vrms',None,'math d1=0.004 n1=1001 o1=0 output="x1*125+2000"')

Flow('synt','vrms',
	'''
	spike d1=0.004 n1=1001 o1=0 nsp=17 n2=128 d2=20 o2=0
	label2=Offset unit2=m
	k1=%s
	mag=1,1,1,1,-1,1,1,-1,1,1,1,-1,1,1,-1,1,1 |
	bandpass flo=4 fhi=20 |
	inmo velocity=$SOURCE half=n
	''' % ",".join(map(str,range(100,916,48))) )

Help('''
2 - Plot dataset
''')

Plot('synt','grey title="CMP model"')

Result('synt','grey title="CMP model"')

Help('''
3 - Add random noise to dataset
''')

Flow('noise','synt','saltpepper inten=2 seed=2013')

Plot('noise','grey title="Noisy model"')

Result('noise','grey title="Noisy model"')

Help('''
4 - Denoising by using median filter (MF)
''')

Flow('median','noise','mf nfw=7')

Plot('median','grey title="Result after median filter"')

Result('sydebyside','noise median','SideBySideIso')

Help('''
5 - Analyzing and comparing the amplitude spectra
''')

Flow('nspec','noise',
	'''
	window n2=1 f2=64 |
	spectra
	''')

Plot('nspec',
	'''
	graph title="Amplitude spectra at 64th trace (before)"
	label1=Amplitude label2=Frequency
	unit1= unit2=Hz
	''')

Flow('mspec','median',
	'''
	window n2=1 f2=64 |
	spectra
	''')

Plot('mspec',
	'''
	graph title="Amplitude spectra at 64th trace (after)"
	label1=Amplitude label2=Frequency
	unit1= unit2=Hz
	''')

Result('compare','noise median nspec mspec', 'TwoRows', vppen='xsize=10 ysize=10')

End()






















