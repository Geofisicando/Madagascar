#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct  (Madagascar Script)
#
# Purpose: Generate gaussian reflector velocity model for Kirchhoff modeling.
#
# Site: https://www.geofisicando.com
# 
# Programmer: Rodolfo A. C. Neves (Dirack) 18/09/2019
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

__author__="Rodolfo Dirack <rodolfo_profissional@hotmail.com>"
__site__="https://www.geofisicando.com"

Help('''
    Kirchhoff modeling example for a gaussian reflector
    ===================================================

    Author: %s
    Site: %s
    ''' % (__author__,__site__))

# Madagascar library
from rsf.proj import *
from rsf.recipes.geofisicando import velplot


# Python math library
import math

# Modeling: Gaussian reflector in a velocity linear model
# velocity increases with depth with a 0.5 velocity gradient
Flow('gaussianReflector',None,
     '''
     math d1=0.01 n1=2001 o1=-5 unit1=km label1=Offset
     output="4-3*exp(-(x1-5)^2/9)"
     ''')

for g in range(2):
    gaussianReflector = 'gaussianReflector%d' % g
    Plot(gaussianReflector,'gaussianReflector',
         '''
         graph min2=0 max2=4 min1=0 max1=10
         yreverse=y plotcol=%d plotfat=%d
         wantaxis=n wanttitle=n scalebar=y pad=n
         ''' % ((7,0)[g],(7,3)[g]))

# Velocity Model
Flow('velocityModel','gaussianReflector',
     '''
     window min1=0 max1=10 |
     spray axis=1 n=451 d=0.01 o=0 label=Depth unit=km |
     math output="1.5+0.5*x1+0.0*x2"
     ''')

velplot('velocityModel')

Result('gaussianReflectorVelocityModel','velocityModel gaussianReflector0 gaussianReflector1','Overlay')

End()
